# -*- coding: utf-8 -*-
"""audiomix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o3L3G6yoxwMgBy3cOppuEZkUHtgubJHY
"""
import os
import wave
import numpy as np
owl = os.listdir('./owl')
peafowl = os.listdir('./peafowl')
i=0
for files in owl:
    
    w=wave.open('./owl/'+files)
    frames=w.readframes(w.getnframes())
    sample=np.frombuffer(frames, dtype='<i2') 
    samp=sample.astype(np.float64)
    n=len(samp)
    for files1 in peafowl :
        i=i+1
        w1=wave.open('./peafowl/'+files1)
        frames1=w1.readframes(w1.getnframes())
        sample1=np.frombuffer(frames1, dtype='<i2') 
        samp1=sample1.astype(np.float64)
        # n1=min(map(len, samp1))
        n1=len(samp1)
        if n1>n:
            mix=samp[:n] + samp1[:n]
            mix_wav = wave.open("./records/mix2"+str(i)+".wav", 'w')
            mix_wav.setparams(w1.getparams())
            mix_wav.close()
        else:
            mix=samp[:n1] + samp1[:1]
            mix_wav = wave.open("./records/mix2"+str(i)+".wav", 'w')
            mix_wav.setparams(w1.getparams())
            mix_wav.close()



# wavs = [wave.open(fn) for fn in fnames]
# frames = [w.readframes(w.getnframes()) for w in wavs]
# # here's efficient numpy conversion of the raw byte buffers
# # '<i2' is a little-endian two-byte integer.
# samples = [np.frombuffer(f, dtype='<i2') for f in frames]
# samples = [samp.astype(np.float64) for samp in samples]
# # mix as much as possible
# n = min(map(len, samples))
# mix = samples[0][:n] + samples[1][:n]
# # Save the result
# mix_wav = wave.open("./mix2.wav", 'w')
# mix_wav.setparams(wavs[0].getparams())
# # before saving, we want to convert back to '<i2' bytes:
# mix_wav.writeframes(mix.astype('<i2').tobytes())
# mix_wav.close()